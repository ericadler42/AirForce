# List of remote hostnames or IP addresses
$remoteHosts = @("Host1", "Host2", "Host3")

# Initialize an empty array to store computer information for each host
$computerInfoArray = @()

# Loop through each remote host
foreach ($hostname in $remoteHosts) {
    # Use Try-Catch to handle WinRM errors and continue to the next host on error
    try {
        $ipAddress = (Test-Connection -ComputerName $hostname -Count 1).IPV4Address.IPAddressToString

        # Get the network adapter name corresponding to the IP address
        $networkAdapterName = (Get-NetAdapter | Where-Object { $_.Status -eq 'Up' }).Name

        # Initialize MAC address variable
        $macAddress = $null

        # Loop through each IP address to find the corresponding MAC address
        foreach ($ip in $ipAddress) {
            $interfaceIndex = (Get-NetIPAddress -IPAddress $ip).InterfaceIndex
            $mac = (Get-NetAdapter -InterfaceIndex $interfaceIndex).MacAddress
            if ($null -ne $mac) {
                $macAddress = $mac
                break
            }
        }

        $serialNumber = (Get-CimInstance -ClassName Win32_Bios).SerialNumber
        $osVersion = (Get-CimInstance -ClassName Win32_OperatingSystem).Version

        # Get the device type using WMI
        $deviceType = (Get-WmiObject -Class Win32_ComputerSystem).Model

        # Create a custom object with the gathered information for this host
        $computerInfo = [PSCustomObject]@{
            "Hostname"     = $hostname
            "IP Address"   = $ipAddress
            "MAC Address"  = $macAddress
            "Serial Number"= $serialNumber
            "OS Version"   = $osVersion
            "Device Type"  = $deviceType
        }

        # Add the computer information object to the array
        $computerInfoArray += $computerInfo
    } catch {
        Write-Host "Failed to gather information for host $hostname: $_"
        # Add the hostname or IP to the list of offline or error hosts
        $offlineOrErrorHosts += $hostname
    }
}

# Specify the CSV file path
$csvFilePath = "C:\temp\output.csv"
$offlineCsvFilePath = "C:\temp\offline_or_error_hosts.csv"

# Export online computer information to the online CSV
if ($onlineComputerInfoArray.Count -gt 0) {
    $onlineComputerInfoArray | Export-Csv -Path $onlineCsvFilePath -NoTypeInformation -Force
    Write-Host "Online computer information has been saved to $onlineCsvFilePath"
}

# Export offline or error host list to the offline CSV
if ($offlineOrErrorHosts.Count -gt 0) {
    $offlineOrErrorHosts | Export-Csv -Path $offlineCsvFilePath -NoTypeInformation -Force
    Write-Host "Offline or error hosts have been saved to $offlineCsvFilePath"
}
